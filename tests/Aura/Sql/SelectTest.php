<?php
namespace Aura\Sql;

/**
 * Test class for Select.
 * Generated by PHPUnit on 2012-02-26 at 11:59:30.
 */
class SelectTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Select
     */
    protected $select;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();
        $adapter_factory = new AdapterFactory;
        $adapter = $adapter_factory->newInstance('sqlite', ':memory:');
        $this->select = $adapter->newSelect();
    }
    
    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        parent::tearDown();
    }

    protected function assertSameSql($expect, $actual)
    {
        $expect = trim($expect);
        $expect = preg_replace('/^\s*/m', '', $expect);
        $expect = preg_replace('/\s*$/m', '', $expect);
        
        $actual = trim($actual);
        $actual = preg_replace('/^\s*/m', '', $actual);
        $actual = preg_replace('/\s*$/m', '', $actual);
        
        $this->assertSame($expect, $actual);
    }
    
    /**
     * @covers Aura\Sql\Select::__toString
     * @todo Implement test__toString().
     */
    public function test__toString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Aura\Sql\Select::setPaging
     * @todo Implement testSetPaging().
     */
    public function testSetAndGetPaging()
    {
        $expect = 88;
        $this->select->setPaging($expect);
        $actual = $this->select->getPaging();
        $this->assertSame($expect, $actual);
    }

    /**
     * @covers Aura\Sql\Select::distinct
     * @todo Implement testDistinct().
     */
    public function testDistinct()
    {
        $this->select->distinct()->from('t1', ['c1', 'c2', 'c3']);
        $actual = $this->select->__toString();
        $expect = '
            SELECT DISTINCT
                "c1" AS "c1",
                "c2" AS "c2",
                "c3" AS "c3"
            FROM
                "t1"
        ';
        $this->assertSameSql($expect, $actual);
    }
    
    /**
     * @covers Aura\Sql\Select::cols
     * @todo Implement testCols().
     */
    public function testCols()
    {
        $this->select->cols(['c1', 'c2', 'c3'])->from('t1');
        $actual = $this->select->__toString();
        $expect = '
            SELECT
                "c1",
                "c2",
                "c3"
            FROM
                "t1"
        ';
        $this->assertSameSql($expect, $actual);
    }

    /**
     * @covers Aura\Sql\Select::from
     * @todo Implement testFrom().
     */
    public function testFrom()
    {
        $this->select->from('t1', ['c1', 'c2', 'c3'])
                     ->from('t2', ['c1', 'c2', 'c3']);
                     
        $actual = $this->select->__toString();
        $expect = '
            SELECT DISTINCT
                "c1" AS "c1",
                "c2" AS "c2",
                "c3" AS "c3"
            FROM
                "t1"
        ';
        $this->assertSameSql($expect, $actual);
    }

    /**
     * @covers Aura\Sql\Select::fromSubSelect
     * @todo Implement testFromSubSelect().
     */
    public function testFromSubSelect()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Aura\Sql\Select::join
     * @todo Implement testJoin().
     */
    public function testJoin()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Aura\Sql\Select::joinSubSelect
     * @todo Implement testJoinSubSelect().
     */
    public function testJoinSubSelect()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Aura\Sql\Select::where
     * @todo Implement testWhere().
     */
    public function testWhere()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Aura\Sql\Select::orWhere
     * @todo Implement testOrWhere().
     */
    public function testOrWhere()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Aura\Sql\Select::groupBy
     * @todo Implement testGroupBy().
     */
    public function testGroupBy()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Aura\Sql\Select::having
     * @todo Implement testHaving().
     */
    public function testHaving()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Aura\Sql\Select::orHaving
     * @todo Implement testOrHaving().
     */
    public function testOrHaving()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Aura\Sql\Select::orderBy
     * @todo Implement testOrderBy().
     */
    public function testOrderBy()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Aura\Sql\Select::limit
     * @todo Implement testLimit().
     */
    public function testLimit()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Aura\Sql\Select::limitPage
     * @todo Implement testLimitPage().
     */
    public function testLimitPage()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Aura\Sql\Select::union
     * @todo Implement testUnion().
     */
    public function testUnion()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Aura\Sql\Select::unionAll
     * @todo Implement testUnionAll().
     */
    public function testUnionAll()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
